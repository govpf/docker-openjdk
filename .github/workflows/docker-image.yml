name: Publish Docker images

on:
  push:
    branches: [ master ]
  schedule:
    - cron:  '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: [8, 11, 17]
        type: [jdk, jre]
        os: [alpine, debian]
    env:
      repo: "govpf/openjdk"
    steps:

    - name: Checkout
      uses: actions/checkout@v3.0.1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.6.0

    - name: Login to DockerHub
      uses: docker/login-action@v1.14.1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push debian
      uses: docker/build-push-action@v2.10.0
      with:
        context: .
        file: ./${{ matrix.versions }}/${{ matrix.type }}/${{ matrix.os }}/Dockerfile
        platforms: linux/amd64
        pull: true
        push: true
        tags: |
          ${{ env.repo }}:${{ matrix.versions }}-${{ matrix.type }}-${{ matrix.os }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.repo }}:${{ matrix.versions }}-${{ matrix.type }}-${{ matrix.os }}
        format: 'sarif'
        output: 'trivy-results.${{ matrix.versions }}-${{ matrix.type }}-${{ matrix.os }}.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      if: always()
      with:
        sarif_file: 'trivy-results.${{ matrix.versions }}-${{ matrix.type }}-${{ matrix.os }}.sarif'

    - name: Push aliases
      uses: docker/build-push-action@v2.10.0
      if: matrix.os == 'alpine'
      with:
        context: .
        file: ./8/${{ matrix.type }}/${{ matrix.os }}/Dockerfile
        platforms: linux/amd64
        pull: true
        push: true
        tags: |
          ${{ env.repo }}:8-${{ matrix.type }}

    - name: Update repo description
      uses: peter-evans/dockerhub-description@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        repository: "${{ env.repo }}"
